{% import_yaml 'metalk8s/defaults.yaml' as defaults with context %}
{% import_json 'metalk8s/versions.json' as versions with context %}

{# First merge the basic defaults with versions information #}
{% set version_defaults = salt['grains.filter_by']({
  'CentOS': {
    'kubernetes': versions.kubernetes,
    'repo': {
      'packages': versions.packages.centos,
      'images': versions.images,
    },
  },
  'RedHat': {
    'kubernetes': versions.kubernetes,
    'repo': {
      'packages': versions.packages.redhat,
      'images': versions.images,
    },
  },
  'Ubuntu': {
    'kubernetes': versions.kubernetes,
    'repo': {
      'packages': versions.packages.ubuntu,
      'images': versions.images,
    },
  },
}, grain='os', merge=defaults.get('version_defaults')) %}

{% set packages = salt['grains.filter_by']({
  'RedHat': {},
  'Debian': {
    'm2crypto': 'python-m2crypto',
    'iproute': 'iproute2',
  },
}, grain='os_family') %}

{% set defaults = salt['grains.filter_by']({
  'default': defaults,
}, merge=version_defaults) %}

{# Then merge with pillar overrides #}
{% set defaults = salt['grains.filter_by']({
  'default': defaults
}, merge=pillar) %}

{% set metalk8s = salt['grains.filter_by']({
  'default': {}
}, merge=defaults.get('metalk8s')) %}

{% set kubernetes = salt['grains.filter_by']({
  'default': {}
}, merge=defaults.get('kubernetes')) %}

{% set kubeadm_preflight = salt['grains.filter_by']({
  'default': {}
}, merge=defaults.get('kubeadm_preflight')) %}

{% set repo = salt['grains.filter_by']({
  'RedHat': {
    'containerd': {
      'name': 'epel'
    },
    'kubernetes': {
      'name': 'kubernetes'
    },
    'repositories': {
      'metalk8s-epel': {
        'humanname': 'EPEL',
        'gpgcheck': 1,
        'gpgkeys': [
            'RPM-GPG-KEY-metalk8s-epel-7_1',
        ],
        'repo_gpg_check': 0,
        'enabled': 1,
      },
      'metalk8s-kubernetes': {
        'humanname': 'Kubernetes',
        'gpgcheck': 1,
        'gpgkeys': [
            'RPM-GPG-KEY-metalk8s-kubernetes-7_1',
            'RPM-GPG-KEY-metalk8s-kubernetes-7_2',
        ],
        'repo_gpg_check': 0,
        'enabled': 1,
      },
      'metalk8s-saltstack': {
        'humanname': 'SaltStack',
        'gpgcheck': 1,
        'gpgkeys': [
            'RPM-GPG-KEY-metalk8s-saltstack-7_1',
        ],
        'repo_gpg_check': 0,
        'enabled': 1,
      },
      'metalk8s-scality': {
        'humanname': 'Scality',
        'gpgcheck': 0,
        'gpgkeys': [],
        'repo_gpg_check': 0,
        'enabled': 1,
      },
    }
  },
  'Debian': {
    'repositories': {
      'metalk8s-bionic': {
        'type': 'deb',
        'options': {
          'trusted': 'yes',
        },
        'components': [
          'metalk8s-bionic',
        ],
      },
      'metalk8s-bionic-updates': {
        'type': 'deb',
        'options': {
          'trusted': 'yes',
        },
        'components': [
          'metalk8s-bionic-updates',
        ],
      },
      'metalk8s-bionic-backports':{
        'type': 'deb',
        'options': {
          'trusted': 'yes',
        },
        'components': [
          'metalk8s-bionic-backports',
        ],
      },
      'metalk8s-salt_ubuntu1804': {
        'type': 'deb',
        'options': {
          'trusted': 'yes',
        },
        'components': [
          'metalk8s-salt_ubuntu1804',
        ],
      },
      'metalk8s-kubernetes-xenial': {
        'type': 'deb',
        'options': {
          'trusted': 'yes',
        },
        'components': [
          'metalk8s-kubernetes-xenial',
        ],
      },
      'metalk8s-scality': {
        'type': 'deb',
        'options': {
          'trusted': 'yes',
        },
        'components': [
          'metalk8s-scality',
        ],
      }
    }
  }
}, grain='os_family', merge=defaults.get('repo')) %}

{% set networks = salt['grains.filter_by']({
  'default': {}
}, merge=defaults.get('networks')) %}

{% set runc = salt['grains.filter_by']({
  'default': {}
}, merge=defaults.get('runc')) %}

{% set containerd = salt['grains.filter_by']({
  'default': {}
}, merge=defaults.get('containerd')) %}

{% set kubelet = salt['grains.filter_by']({
  'Debian': {
    'service': {
      'options': {
        'resolv-conf': '/run/systemd/resolve/resolv.conf'
      }
    }
  },
  'RedHat': {
    'service': {
      'options': {
        'resolv-conf': '/etc/resolv.conf'
      }
    }
  }
}, grain='os_family', merge=defaults.get('kubelet')) %}

{% set ca = salt['grains.filter_by']({
  'default': {}
}, merge=defaults.get('ca')) %}

{% set kube_api = salt['grains.filter_by']({
  'default': {}
}, merge=defaults.get('kube_api')) %}

{% set etcd = salt['grains.filter_by']({
  'default': {}
}, merge=defaults.get('etcd')) %}

{% set front_proxy = salt['grains.filter_by']({
  'default': {}
}, merge=defaults.get('front_proxy')) %}

{% set coredns = salt['grains.filter_by']({
  'default': {}
}, merge=defaults.get('coredns')) %}

{% set kubeadm_kubeconfig = salt['grains.filter_by']({
  'default': {}
}, merge=defaults.get('kubeadm_kubeconfig')) %}

{% set nginx_ingress = salt['grains.filter_by']({
  'default': {}
}, merge=defaults.get('nginx-ingress')) %}

{% set proxies = salt['grains.filter_by']({
  'default': {}
}, merge=defaults.get('proxies')) %}
